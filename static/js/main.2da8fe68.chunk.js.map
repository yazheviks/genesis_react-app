{"version":3,"sources":["components/types/planetType.js","helpers/cutNumber.jsx","components/Planet/Planet.jsx","components/Button/Button.jsx","api/api.js","components/PageError/PageError.jsx","components/Planets/Planets.jsx","components/PlanetInfo/PlanetInfo.jsx","components/types/residentType.js","components/PlanetPage/PlanetPage.jsx","App.jsx","index.js"],"names":["PropTypes","shape","name","string","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","films","oneOfType","array","arrayOf","population","residents","created","edited","url","cutNumber","split","length","Planet","planet","to","style","textDecoration","className","classNames","require","Button","text","mission","href","exact","button__arrow","btn","type","defaultProps","request","options","fetch","then","result","ok","Error","status","statusText","json","PageError","Planets","pageId","match","params","useState","planets","setPlanets","useEffect","results","catch","isBigger","map","PlanetInfo","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","species","vehicles","starships","person","PlanetPage","setResidents","setPlanet","planetId","slice","resultPlanet","people","forEach","personURL","replace","personJSON","push","App","path","render","routerParams","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2da8fe68.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const planetType = PropTypes.shape({\n  name: PropTypes.string,\n  rotation_period: PropTypes.string,\n  orbital_period: PropTypes.string,\n  diameter: PropTypes.string,\n  climate: PropTypes.string,\n  gravity: PropTypes.string,\n  terrain: PropTypes.string,\n  surface_water: PropTypes.string,\n  films: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.arrayOf(\n      PropTypes.string,\n    ),\n  ]),\n  population: PropTypes.string,\n  residents: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.arrayOf(\n      PropTypes.string,\n    ),\n  ]),\n  created: PropTypes.string,\n  edited: PropTypes.string,\n  url: PropTypes.string,\n});\n","export function cutNumber(url) {\n  const split = url.split('/');\n  const { length } = split;\n  const res = split[length - 2];\n\n  return res;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { planetType } from '../types/planetType';\nimport { cutNumber } from '../../helpers/cutNumber';\n\nexport const Planet = ({ planet }) => (\n  <div>\n    <Link\n      to={`/planets/${cutNumber(planet.url)}`}\n      style={{ textDecoration: 'none' }}\n    >\n      <div className=\"planets__planet planet card\">\n        <h1 className=\"planet__title card-title\">\n          {planet.name}\n        </h1>\n        <div className=\"planet__info\">\n          <span className=\"card-text\">{`Climate: ${planet.climate}`}</span>\n          <span className=\"card-text\">\n            {`Population: ${planet.population}`}\n          </span>\n        </div>\n      </div>\n    </Link>\n  </div>\n);\n\nPlanet.propTypes = {\n  planet: planetType.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Button = ({ text, mission, href, className }) => (\n  <Link\n    to={href}\n    exact\n    className=\"button\"\n  >\n    <button\n      className={classNames({\n        button__arrow: true,\n        btn: true,\n        'btn-danger': mission === 'return',\n        'btn-dark': mission === 'next' || mission === 'prev',\n      }, `button__arrow--${mission}`, className)}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  </Link>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  mission: PropTypes.string.isRequired,\n  href: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: '',\n};\n","export const BASE_URL = 'https://swapi.dev/api/';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((result) => {\n    if (!result.ok) {\n      throw new Error(`${result.status} - ${result.statusText}`);\n    }\n\n    return result.json();\n  });\n\nexport const getPlanets = () => request('planets/')\n  .then(result => result.results)\n  .then(result => result.map((planet, i) => ({\n    ...planet,\n    id: i + 1,\n  })));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PageError = ({ text }) => (\n  <div className=\"planet-page__error\">\n    {text}\n  </div>\n);\n\nPageError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Planet } from '../Planet';\nimport { Button } from '../Button';\nimport { request } from '../../api/api';\nimport { PageError } from '../PageError';\n\nexport const Planets = ({ match }) => {\n  const pageId = +match.params.pageId;\n  const [planets, setPlanets] = useState(null);\n\n  useEffect(() => {\n    request(`planets/?page=${pageId}`)\n      .then(result => result.results)\n      .then((result) => {\n        setPlanets(result);\n\n        return result;\n      })\n      .catch(() => {\n        setPlanets('none');\n      });\n  }, [pageId]);\n\n  const isBigger = pageId >= 7;\n\n  return planets ? (\n    <div className=\"planets\">\n      {planets === 'none' ? (\n        <>\n          <PageError text=\"Planets are over\" />\n          <Button\n            text={isBigger ? '<' : '>'}\n            mission={isBigger ? 'prev' : 'next'}\n            href={isBigger ? `/page/${pageId - 1}/` : '/page/1/'}\n          />\n        </>\n      ) : (\n        <>\n          <Button\n            text=\"<\"\n            mission=\"prev\"\n            href={`/page/${pageId - 1}`}\n          />\n          <Button\n            text=\">\"\n            mission=\"next\"\n            href={`/page/${pageId + 1}`}\n          />\n          {planets.map(planet => (\n            <Planet\n              planet={planet}\n              key={planet.name}\n            />\n          ))}\n        </>\n      )}\n    </div>\n  ) : (\n    <PageError text=\"Loading...\" />\n  );\n};\n\nPlanets.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      pageId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport { planetType } from '../types/planetType';\nimport { residentType } from '../types/residentType';\n\nexport const PlanetInfo = ({ planet, residents }) => (\n  <>\n    <h1 className=\"planet-page__title\">{planet.name}</h1>\n    <p className=\"planet-page__rotation-period\">\n      {`Rotation period: ${planet.rotation_period}`}\n    </p>\n    <p className=\"planet-page__diameter\">\n      {`Diameter: ${planet.diameter}`}\n    </p>\n    <p className=\"planet-page__climate\">\n      {`Climate: ${planet.climate}`}\n    </p>\n    <p className=\"planet-page__gravity\">\n      {`GRavity: ${planet.gravity}`}\n    </p>\n    <p className=\"planet-page__terrain\">\n      {`Terrain: ${planet.terrain}`}\n    </p>\n    <p className=\"planet-page__population\">\n      {`Population: ${planet.population}`}\n    </p>\n    <div className=\"planet-page__residents\">\n      {residents && residents.length === 0 && (\n        <div>We know nobody from here...</div>\n      )}\n      {residents ? (\n        residents.length > 0 && (\n          <div>\n            You may know them:\n            {residents.map(person => (\n              <p\n                className=\"planet-page__resident\"\n                key={person.name}\n              >\n                {person.name}\n              </p>\n            ))}\n          </div>\n        )\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  </>\n);\n\nPlanetInfo.propTypes = {\n  planet: planetType.isRequired,\n  residents: residentType,\n};\n\nPlanetInfo.defaultProps = {\n  residents: null,\n};\n","import PropTypes from 'prop-types';\n\nexport const residentType = PropTypes.oneOfType([\n  PropTypes.array,\n  PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    height: PropTypes.string,\n    mass: PropTypes.string,\n    hair_color: PropTypes.string,\n    skin_color: PropTypes.string,\n    eye_color: PropTypes.string,\n    birth_year: PropTypes.string,\n    gender: PropTypes.string,\n    homeworld: PropTypes.string,\n    films: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.arrayOf(\n        PropTypes.string,\n      ),\n    ]),\n    species: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.arrayOf(\n        PropTypes.string,\n      ),\n    ]),\n    vehicles: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.arrayOf(\n        PropTypes.string,\n      ),\n    ]),\n    starships: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.arrayOf(\n        PropTypes.string,\n      ),\n    ]),\n    created: PropTypes.string,\n    edited: PropTypes.string,\n    url: PropTypes.string,\n  })),\n]);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\nimport { PageError } from '../PageError';\nimport { PlanetInfo } from '../PlanetInfo';\nimport { request } from '../../api/api';\n\nexport const PlanetPage = ({ match }) => {\n  const [residents, setResidents] = useState(null);\n  const [planet, setPlanet] = useState(null);\n  const planetId = +match.params.planetId;\n\n  useEffect(() => {\n    request(`${match.url.slice(1)}/`)\n      .then((result) => {\n        setPlanet(result);\n\n        return result;\n      })\n      .then((resultPlanet) => {\n        const people = [];\n\n        if (!resultPlanet) {\n          return;\n        }\n\n        if (resultPlanet.residents.length === 0) {\n          setResidents([]);\n        }\n\n        resultPlanet.residents.forEach((personURL) => {\n          const url = personURL.replace('http', 'https');\n\n          fetch(url)\n            .then(person => person.json())\n            .then((personJSON) => {\n              people.push(personJSON);\n            })\n            .then(() => {\n              setResidents([...people]);\n            });\n        });\n      })\n      .catch(() => {\n        setPlanet('none');\n      });\n  }, [planetId]);\n\n  const isErrorPage = planetId > 60 || planetId <= 0;\n\n  if (isErrorPage) {\n    return planetId > 60 ? (\n      <div className=\"planet-page\">\n        <PageError text=\"Thant&apos;s all...\" />\n        <Button\n          text=\"X\"\n          mission=\"return\"\n          href=\"/page/1/\"\n        />\n\n        <Button\n          text=\"<\"\n          mission=\"prev\"\n          href={`/planets/${planetId - 1}`}\n          className=\"right\"\n        />\n      </div>\n    ) : (\n      <div className=\"planet-page\">\n        <PageError text=\"Thant&apos;s all...\" />\n        <Button\n          text=\"X\"\n          mission=\"return\"\n          href=\"/page/1\"\n        />\n        <Button\n          text=\">\"\n          mission=\"next\"\n          href={`/planets/${planetId + 1}`}\n          className=\"left\"\n        />\n      </div>\n    );\n  }\n\n  return planet ? (\n    <div className=\"planet-page\">\n      <div>\n        <Button\n          text=\"<\"\n          mission=\"prev\"\n          href={`/planets/${planetId - 1}`}\n        />\n        <Button\n          text=\">\"\n          mission=\"next\"\n          href={`/planets/${planetId + 1}`}\n        />\n      </div>\n      <Button\n        text=\"X\"\n        mission=\"return\"\n        href=\"/page/1\"\n      />\n      {residents ? (\n        <PlanetInfo\n          planet={planet}\n          residents={residents}\n        />\n      ) : (\n        <PageError text=\"Loading...\" />\n      )}\n    </div>\n  ) : (\n    <PageError text=\"Loading...\" />\n  );\n};\n\nPlanetPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      planetId: PropTypes.string,\n    }),\n    url: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './main.scss';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Planets } from './components/Planets';\nimport { PlanetPage } from './components/PlanetPage';\nimport { PageError } from './components/PageError';\nimport { Button } from './components/Button';\n\nexport const App = () => (\n  <div>\n    <h1 className=\"page__title\">Star wars universe</h1>\n    <Switch>\n      <Route\n        path=\"/page/:pageId\"\n        render={routerParams => (\n          <Planets\n            {...routerParams}\n          />\n        )}\n        exact\n      />\n\n      <Route\n        path=\"/planets/:planetId\"\n        render={routerParams => (\n          <PlanetPage\n            {...routerParams}\n          />\n        )}\n      />\n\n      <Redirect path=\"/\" to=\"/page/1/\" exact />\n\n      <div className=\"error-page\">\n        <PageError text=\"Page is not found\" />\n        <Button\n          text=\"back to main\"\n          mission=\"return\"\n          href=\"/page/1\"\n        />\n      </div>\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}